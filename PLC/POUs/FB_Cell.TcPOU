<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Cell" Id="{94f7f691-4eab-4c8c-b55b-20327a9666cd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Cell
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	eAutoMan					: E_AutoMan := E_AutoMan.MANUAL;
	State						: E_CellState;
	
	InfeedConveyor				: IAxis := Devices.fbInfeedConveyor;
	IndexConveyor				: IAxis := Devices.fbIndexConveyor;
	InfeedActuator				: IActuator := Devices.fbInfeedActuator;
	RejectActuator				: IActuator := Devices.fbRejectActuator;
	
	Stations					: ARRAY[0..9] OF IStation;
	PartStatus					: ARRAY[0..9] OF ST_PartStatus;
	iStationCount				: DINT := 0;
	i							: DINT;
	PartBuffer					: FB_FifoQueue;
	
	bAllStationsReady			: BOOL;
	bStationPartPresent			: BOOL;
	bStationFaulted				: BOOL;
	
	bStartReq					: BOOL;
	bStopReq					: BOOL;
	bPartPresentAtInfeed		: BOOL;
	
	bFeeding					: BOOL;
	bFeedingComplete			: BOOL;
	bIndexing					: BOOL;
	bIndexComplete				: BOOL;
	
	tmrStationWait				: TON;
	NewPart						: ST_PartStatus;
	
	fIndexPosition				: LREAL;
	INDEX_DIST					: LREAL := 100.0;
	INDEX_VEL					: LREAL := 100.0;
	INFEED_VEL					: LREAL := 100.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddStation" Id="{a5be06ec-f18d-45a8-95a9-f1b60f461c63}">
      <Declaration><![CDATA[METHOD PUBLIC AddStation : PVOID
VAR_INPUT
	Station		: IStation;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Stations[iStationCount] := Station;
Station.PartStatus := ADR(PartStatus[iStationCount]);
iStationCount := iStationCount + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="DeviceMgr" Id="{13ca6ea9-3dad-422e-a41a-d290e3b27aff}">
      <Declaration><![CDATA[METHOD PRIVATE DeviceMgr : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF InfeedConveyor <> 0 THEN
	InfeedConveyor.Execute();
END_IF
IF IndexConveyor <> 0 THEN
	IndexConveyor.Execute();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{d7efdd70-bdc8-43b5-82c2-5ff6cb9ffaaa}">
      <Declaration><![CDATA[METHOD PUBLIC Execute : PVOID
VAR_INPUT
END_VAR
VAR
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[StationMgr();
DeviceMgr();
PartBuffer(ptrArrData:=ADR(PartStatus), Length:=TO_UDINT(iStationCount), Ring:= TRUE);

IF eAutoMan = E_AutoMan.AUTO THEN
			
	CASE State OF
		
		E_CellState.STOPPED:
		
			IF bStartReq THEN
				State := E_CellState.RUNNING;
				bStartReq := FALSE;
			END_IF
			
		E_CellState.RUNNING:
			
			InfeedConveyor.JogFwd(INFEED_VEL);
			
			IF bPartPresentAtInfeed AND NOT bIndexing 
			AND (Stations[0] <> 0 AND NOT Stations[0].PartPresent) THEN
				bFeeding := TRUE;
			END_IF
			
			IF bFeeding THEN
				IF NOT bFeedingComplete THEN
					IF InfeedActuator.Cycle() THEN
						PartBuffer.Enqueue(NewPart);
						bFeedingComplete := TRUE;
					END_IF
				ELSE
					tmrStationWait(IN:=TRUE, PT:=T#500MS);
					IF tmrStationWait.Q THEN
						tmrStationWait(IN:=FALSE);
						bFeedingComplete := FALSE;
						bFeeding := FALSE;
					END_IF
				END_IF
			END_IF
			
			IF bAllStationsReady AND bStationPartPresent AND NOT bFeeding THEN
				tmrStationWait(IN:=TRUE, PT:=T#500MS);
				IF tmrStationWait.Q THEN
					tmrStationWait(IN:=FALSE);
					bIndexing := TRUE;
				END_IF
			END_IF
			
			IF bIndexing THEN
				IF NOT bIndexComplete THEN
					fIndexPosition := IndexConveyor.ActPosition + INDEX_DIST;
					IF (IndexConveyor.MoveAbsolute(fIndexPosition, INDEX_VEL)) AND NOT bIndexComplete THEN
						bIndexComplete := TRUE;
					END_IF
				ELSE
					tmrStationWait(IN:=TRUE, PT:=T#500MS);
					IF tmrStationWait.Q THEN
						tmrStationWait(IN:=FALSE);
						bIndexComplete := FALSE;
						bIndexing := FALSE;
					END_IF
				END_IF
				
			END_IF
			
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="StationMgr" Id="{406f1cac-08f7-4834-90e0-c1f532d28c4c}">
      <Declaration><![CDATA[METHOD PRIVATE StationMgr : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iStationCount < 1 THEN
	RETURN;
END_IF

bAllStationsReady := TRUE;
bStationFaulted := FALSE;
bStationPartPresent := FALSE;

FOR i := 0 TO iStationCount - 1	DO
	IF (Stations[i] = 0) THEN
		CONTINUE;
	END_IF
	
	Stations[i].Execute();
	
	IF (NOT Stations[i].Ready) THEN
		bAllStationsReady := FALSE;
	END_IF
	
	IF Stations[i].Faulted THEN
		bStationFaulted := TRUE;
	END_IF
	
	IF Stations[i].PartPresent THEN
		bStationPartPresent := TRUE;
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Cell">
      <LineId Id="67" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell.AddStation">
      <LineId Id="7" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell.DeviceMgr">
      <LineId Id="6" Count="4" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell.Execute">
      <LineId Id="29" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="83" Count="4" />
      <LineId Id="89" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="168" Count="0" />
      <LineId Id="167" Count="0" />
      <LineId Id="169" Count="0" />
      <LineId Id="171" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="172" Count="3" />
      <LineId Id="209" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="221" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="210" Count="0" />
      <LineId Id="214" Count="0" />
      <LineId Id="216" Count="4" />
      <LineId Id="215" Count="0" />
      <LineId Id="211" Count="0" />
      <LineId Id="179" Count="2" />
      <LineId Id="223" Count="1" />
      <LineId Id="227" Count="0" />
      <LineId Id="225" Count="1" />
      <LineId Id="183" Count="2" />
      <LineId Id="192" Count="0" />
      <LineId Id="195" Count="2" />
      <LineId Id="193" Count="0" />
      <LineId Id="198" Count="2" />
      <LineId Id="204" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="194" Count="0" />
      <LineId Id="191" Count="0" />
      <LineId Id="170" Count="0" />
      <LineId Id="106" Count="0" />
      <LineId Id="54" Count="1" />
    </LineIds>
    <LineIds Name="FB_Cell.StationMgr">
      <LineId Id="22" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="54" Count="1" />
      <LineId Id="53" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="26" Count="4" />
      <LineId Id="32" Count="3" />
      <LineId Id="37" Count="2" />
      <LineId Id="21" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="46" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>