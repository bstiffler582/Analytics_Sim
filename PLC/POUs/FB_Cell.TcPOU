<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Cell" Id="{94f7f691-4eab-4c8c-b55b-20327a9666cd}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Cell
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	eAutoMan					: E_AutoMan := E_AutoMan.MANUAL;
	State						: E_CellState;
	
	InfeedConveyor				: IAxis;
	IndexConveyor				: IAxis;
	InfeedActuator				: IActuator;
	RejectActuator				: IActuator;
	
	Stations					: ARRAY[0..9] OF IStation;
	iStationCount				: DINT := 0;
	i							: DINT;
	
	bAllStationsReady			: BOOL;
	bStationPartPresent			: BOOL;
	bStationFaulted				: BOOL;
	
	bStartReq					: BOOL;
	bStopReq					: BOOL;
	bPartPresentAtInfeed		: BOOL;
	
	fIndexPosition				: LREAL;
	INDEX_DIST					: LREAL;
	INDEX_VEL					: LREAL;
	INFEED_VEL					: LREAL;
	
	tmrStationWait				: TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="AddStation" Id="{a5be06ec-f18d-45a8-95a9-f1b60f461c63}">
      <Declaration><![CDATA[METHOD PUBLIC AddStation : PVOID
VAR_INPUT
	Station		: IStation;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Stations[iStationCount] := Station;
iStationCount := iStationCount + 1;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Execute" Id="{d7efdd70-bdc8-43b5-82c2-5ff6cb9ffaaa}">
      <Declaration><![CDATA[METHOD PUBLIC Execute : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.StationMgr();
IF InfeedConveyor <> 0 THEN
	InfeedConveyor.Execute();
END_IF
IF IndexConveyor <> 0 THEN
	IndexConveyor.Execute();
END_IF

IF eAutoMan = E_AutoMan.AUTO THEN
	
	// continuous jog infeed conveyor
	InfeedConveyor.JogFwd(INFEED_VEL);
			
	CASE State OF
		
		E_CellState.STOPPED:
		
			IF bStartReq THEN
				State := E_CellState.IDLE;
				bStartReq := FALSE;
			END_IF
		
		E_CellState.IDLE:
		
			IF bPartPresentAtInfeed THEN
				State := E_CellState.FEED;
			ELSIF bStationPartPresent THEN
				State := E_CellState.WAIT_STATION;
			END_IF
			
		E_CellState.FEED:
		
			IF InfeedActuator.Cycle() THEN
				State := E_CellState.WAIT_STATION;		
			END_IF
			
		E_CellState.WAIT_STATION:
		
			tmrStationWait(IN:=TRUE, PT:=T#500MS);
			IF tmrStationWait.Q = TRUE AND bAllStationsReady THEN
				tmrStationWait(IN:=FALSE);
				State := E_CellState.INDEXING;
			END_IF
			
		E_CellState.INDEXING:
			
			fIndexPosition := IndexConveyor.ActPosition + INDEX_DIST;
			IF (IndexConveyor.MoveAbsolute(fIndexPosition, INDEX_VEL)) THEN
				State := E_CellState.SEQ_DONE;
			END_IF
			
		E_CellState.SEQ_DONE:
			
			IF bStopReq THEN
				State := E_CellState.STOPPED;
				bStopReq := FALSE;
			ELSE
				State:= E_CellState.FEED;
			END_IF
	
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="StationMgr" Id="{406f1cac-08f7-4834-90e0-c1f532d28c4c}">
      <Declaration><![CDATA[METHOD PRIVATE StationMgr : PVOID
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF iStationCount < 1 THEN
	RETURN;
END_IF

FOR i := 0 TO iStationCount	DO
	IF (Stations[i] = 0) THEN
		CONTINUE;
	END_IF
	
	Stations[i].Execute();

	bAllStationsReady := TRUE;
	IF (NOT Stations[i].Ready OR Stations[i].Busy) THEN
		bAllStationsReady := FALSE;
	END_IF
	
	bStationFaulted := FALSE;
	IF Stations[i].Faulted THEN
		bStationFaulted := TRUE;
	END_IF
	
	bStationPartPresent := FALSE;
	IF Stations[i].PartPresent THEN
		bStationPartPresent := TRUE;
	END_IF
	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Cell">
      <LineId Id="67" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell.AddStation">
      <LineId Id="7" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Cell.Execute">
      <LineId Id="29" Count="0" />
      <LineId Id="122" Count="5" />
      <LineId Id="53" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="82" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="100" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="83" Count="4" />
      <LineId Id="89" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="57" Count="2" />
      <LineId Id="61" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="63" Count="0" />
      <LineId Id="106" Count="1" />
      <LineId Id="113" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="108" Count="0" />
      <LineId Id="67" Count="2" />
      <LineId Id="117" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="71" Count="8" />
      <LineId Id="94" Count="1" />
      <LineId Id="93" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="90" Count="0" />
      <LineId Id="96" Count="1" />
      <LineId Id="91" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="54" Count="1" />
    </LineIds>
    <LineIds Name="FB_Cell.StationMgr">
      <LineId Id="22" Count="0" />
      <LineId Id="24" Count="1" />
      <LineId Id="23" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="26" Count="13" />
      <LineId Id="21" Count="0" />
      <LineId Id="43" Count="1" />
      <LineId Id="46" Count="2" />
      <LineId Id="45" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>